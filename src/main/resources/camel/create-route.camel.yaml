- route:
    id: route-process
    from:
      id: from-UML
      description: UML読込み
      uri: file:data/input
      parameters:
        fileName: activity.uml
      steps:
        - log:
            id: log-Read
            description: Start Log
            message: -- [Start] -- Read UML
        - to:
            id: to-convert-uml-to-json
            description: UmlからJson変換
            uri: direct:uml-to-json
            parameters: {}
        - to:
            id: to-create-camel-route
            description: Camel Route 作成
            uri: direct:create-camel-route
            parameters: {}
        - to:
            id: to-create-app-yml
            description: application-yaml作成
            uri: direct:create-app-yml
            parameters: {}
        - to:
            id: to-create-pom-xml
            description: pom-xml作成
            uri: direct:create-pom-xml
            parameters: {}
        - to:
            id: to-create-boot-app
            description: boot-app作成
            uri: direct:create-boot-app
            parameters: {}
        - to:
            id: to-create-route-test-class
            description: Routeテスト作成
            uri: direct:create-route-test-class
            parameters: {}
        - log:
            id: log-Complete
            description: Complete Log
            message: -- [Complete] -- Created Camel Route YAML
- route:
    id: route-uml-to-json
    from:
      id: from-uml-to-json
      description: Convert Uml to Json
      uri: direct:uml-to-json
      parameters: {}
      steps:
        - to:
            id: to-3971
            description: Json-Parameter変換
            uri: bean:createJsonParameterRule
            parameters:
              method: createJsonParameter
        - setProperty:
            id: setProperty-1019
            expression:
              simple:
                expression: ${body}
            name: create_route_json_entity
        - marshal:
            id: marshal-2415
            json: {}
        - to:
            id: to-2087
            description: Json出力
            uri: file:data/output/src/main/resources/json
            parameters:
              fileName: camel_create.json
        - log:
            id: log-3503
            message: -- [Convert UML to JSON] --
- route:
    id: route-create-camel-route
    from:
      id: from-create-camel-route
      description: Camel Route作成
      uri: direct:create-camel-route
      parameters: {}
      steps:
        - setBody:
            id: setBody-8040
            expression:
              simple:
                expression: ${exchangeProperty.create_route_json_entity}
        - bean:
            id: bean-camel-route
            description: Camel Route作成
            method: createProcess
            ref: createProcessRule
        - to:
            id: to-file-camel-route
            uri: file:data/output/src/main/resources/camel
            parameters:
              fileName: result-route.camel.yaml
        - log:
            id: log-camel-route
            message: -- [Create Camel Route] --
- route:
    id: route-create-app-yml
    from:
      id: from-create-app-yml
      description: Applicatiom-yaml作成
      uri: direct:create-app-yml
      parameters: {}
      steps:
        - setBody:
            id: setBody-create-app-yml
            expression:
              simple:
                expression: ${exchangeProperty.create_route_json_entity}
        - bean:
            id: bean-create-app-yml
            description: Application-yml作成
            method: createAppYml
            ref: createApplicationYml
        - to:
            id: to-file-app-yml
            uri: file:data/output/src/main/resources
            parameters:
              fileName: application.yaml
        - log:
            id: log-create-app-yml
            message: -- [Create Application YML] --
- route:
    id: route-create-pom-xml
    from:
      id: from-create-pom-xml
      description: pom-xml作成
      uri: direct:create-pom-xml
      parameters: {}
      steps:
        - setBody:
            id: setBody-create-pom-xml
            expression:
              simple:
                expression: ${exchangeProperty.create_route_json_entity}
        - bean:
            id: bean-create-pom-xml
            description: pom-xml作成
            method: createPom
            ref: createPomXml
        - split:
            id: split-pom
            steps:
              - setProperty:
                  id: setProperty-filename
                  expression:
                    simple:
                      expression: ${body.filename}
                  name: env_file_name
              - setProperty:
                  id: setProperty-context
                  expression:
                    simple:
                      expression: ${body.context}
                  name: env_context
              - setBody:
                  id: setBody-context
                  expression:
                    simple:
                      expression: ${exchangeProperty.env_context}
              - to:
                  id: to-file-pom-xml
                  uri: file:data/output
                  parameters:
                    fileName: ${exchangeProperty.env_file_name}
            expression:
              simple: ${body}
        - log:
            id: log-create-pom-xml
            message: -- [Create Pom XML] --
- route:
    id: route-class-yml
    from:
      id: from-file-class-yaml
      description: Class YAML読み込み
      uri: file:data/input
      parameters:
        fileName: business_object.yml
      steps:
        - setProperty:
            id: setProperty-6884
            expression:
              simple:
                expression: ${body}
            name: class_yaml
        - to:
            id: to-1094
            uri: bean:createPojoClassRule
            parameters:
              method: createYamlClass
        - split:
            id: split-3801
            steps:
              - setProperty:
                  id: setProperty-className
                  expression:
                    simple:
                      expression: ${body.className}
                  name: pojo_class_name
              - setProperty:
                  id: setProperty-packageName
                  expression:
                    simple:
                      expression: ${body.packageName}
                  name: pojo_package_name
              - setProperty:
                  id: setProperty-2857
                  expression:
                    simple:
                      expression: ${body.javaCode}
                  name: pojo_java_code
              - setBody:
                  id: setBody-3725
                  expression:
                    simple:
                      expression: ${exchangeProperty.pojo_java_code}
              - to:
                  id: to-2095
                  uri: file:data/output/src/main/java
                  parameters:
                    fileName: ${exchangeProperty.pojo_package_name}/${exchangeProperty.pojo_class_name}.java
            expression:
              simple: ${body}
        - log:
            id: log-5789
            message: --  [Complete create Class] --
        - to:
            id: to-3390
            uri: direct:pojo-test-class-create
            parameters: {}
- route:
    id: route-create-boot-app
    from:
      id: from-create-boot-app
      description: boot-app作成
      uri: direct:create-boot-app
      parameters: {}
      steps:
        - setBody:
            id: setBody-create-boot-app
            expression:
              simple:
                expression: ${exchangeProperty.create_route_json_entity}
        - bean:
            id: bean-create-boot-app
            description: boot-app作成
            method: createBoot
            ref: createBootApp
        - setProperty:
            id: setProperty-boot-className
            expression:
              simple:
                expression: ${body.className}
            name: boot_class_name
        - setProperty:
            id: setProperty-boot-packageName
            expression:
              simple:
                expression: ${body.packageName}
            name: boot_package_name
        - setProperty:
            id: setProperty-boot-javacode
            expression:
              simple:
                expression: ${body.javaCode}
            name: boot_java_code
        - setBody:
            id: setBody-boot
            expression:
              simple:
                expression: ${exchangeProperty.boot_java_code}
        - to:
            id: to-file-boot
            uri: file:data/output/src/main/java
            parameters:
              fileName: ${exchangeProperty.boot_package_name}/${exchangeProperty.boot_class_name}.java
        - log:
            id: log-create-boot-app
            message: -- [Create Boot App] --
- route:
    id: route-create-pojo-test-class
    from:
      id: from-8556
      uri: direct:pojo-test-class-create
      parameters: {}
      steps:
        - setBody:
            id: setBody-create-pojo-test-class
            expression:
              simple:
                expression: ${exchangeProperty.class_yaml}
        - to:
            id: to-8468
            uri: bean:createPojoTestClassRule
            parameters:
              method: createYamlClass
        - split:
            id: split-test-class-create
            steps:
              - setProperty:
                  id: setProperty-pojo-test-className
                  expression:
                    simple:
                      expression: ${body.className}
                  name: pojo_test_class_name
              - setProperty:
                  id: setProperty-pojo-test-packageName
                  expression:
                    simple:
                      expression: ${body.packageName}
                  name: pojo_test_package_name
              - setProperty:
                  id: setProperty-pojo-test-code
                  expression:
                    simple:
                      expression: ${body.javaCode}
                  name: pojo_test_java_code
              - setBody:
                  id: setBody-pojo-test-code
                  expression:
                    simple:
                      expression: ${exchangeProperty.pojo_test_java_code}
              - to:
                  id: to-file-pojo-test-code
                  uri: file:data/output/src/test/java
                  parameters:
                    fileName: ${exchangeProperty.pojo_test_package_name}/${exchangeProperty.pojo_test_class_name}.java
            expression:
              simple: ${body}
        - log:
            id: log-pojo_test_class
            message: --  [Complete create Pojo Test Class] --
- route:
    id: route-create-route-test-class
    from:
      id: from-3622
      description: Routeテスト作成
      uri: direct:create-route-test-class
      parameters: {}
      steps:
        - setBody:
            id: setBody-3908
            expression:
              simple:
                expression: ${exchangeProperty.create_route_json_entity}
        - to:
            id: to-3282
            description: テストコード作成
            uri: bean:createRouteTestClassRule
            parameters:
              method: createTestClass
        - split:
            id: split-create-route-test-class
            steps:
              - setProperty:
                  id: setProperty-route-test-className
                  expression:
                    simple:
                      expression: ${body.className}
                  name: route_test_class_name
              - setProperty:
                  id: setProperty-route-test-packageName
                  expression:
                    simple:
                      expression: ${body.packageName}
                  name: route_test_package_name
              - setProperty:
                  id: setProperty-route-test-code
                  expression:
                    simple:
                      expression: ${body.javaCode}
                  name: route_test_java_code
              - setBody:
                  id: setBody-route-test-code
                  expression:
                    simple:
                      expression: ${exchangeProperty.route_test_java_code}
              - to:
                  id: to-file-route-test-code
                  uri: file:data/output/src/test/java
                  parameters:
                    fileName: ${exchangeProperty.route_test_package_name}/${exchangeProperty.route_test_class_name}.java
            expression:
              simple: ${body}
        - log:
            id: log-2120
            message: --  [Complete create Route Test Class] --
